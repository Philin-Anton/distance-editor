{"version":3,"file":"app.bundle.js","sources":["webpack:///./index.tsx","webpack:///./containers/App/index.tsx","webpack:///./containers/App/style.scss","webpack:///./store/index.ts","webpack:///./reducers/rootReducer.ts"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst react_dom_1 = require(\"react-dom\");\r\nconst React = require(\"react\");\r\nconst react_redux_1 = require(\"react-redux\");\r\nconst react_router_dom_1 = require(\"react-router-dom\");\r\nconst react_hot_loader_1 = require(\"react-hot-loader\");\r\nconst index_tsx_1 = require(\"./containers/App/index.tsx\");\r\nconst index_ts_1 = require(\"./store/index.ts\");\r\nconst renderApp = (Component) => {\r\n    react_dom_1.render(React.createElement(react_redux_1.Provider, { store: index_ts_1.default },\r\n        React.createElement(react_router_dom_1.BrowserRouter, null,\r\n            React.createElement(react_hot_loader_1.AppContainer, null,\r\n                React.createElement(Component, null)))), document.getElementById('DE-react-root'));\r\n};\r\nrenderApp(index_tsx_1.default);\r\nif (module.hot) {\r\n    module.hot.accept('./containers/App/index.tsx', () => renderApp(index_tsx_1.default));\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./index.tsx\n// module id = 285\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nrequire(\"./style.scss\");\r\nconst App = () => (React.createElement(\"main\", null,\r\n    React.createElement(\"div\", null, \"asdsdas\")));\r\nexports.default = App;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./containers/App/index.tsx\n// module id = 286\n// module chunks = 0","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./containers/App/style.scss\n// module id = 287\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst redux_1 = require(\"redux\");\r\nconst logger = require(\"redux-logger\");\r\nconst thunk = require(\"redux-thunk\");\r\nconst rootReducer_ts_1 = require(\"../reducers/rootReducer.ts\");\r\nconst middleware = [thunk, logger];\r\nconst store = redux_1.createStore(redux_1.combineReducers(rootReducer_ts_1.default), redux_1.compose(redux_1.applyMiddleware(middleware)));\r\nexports.default = store;\r\nstore.asyncReducers = {};\r\nfunction replaceReducers(defaultReducers) {\r\n    const merged = Object.assign({}, defaultReducers, store.asyncReducers);\r\n    const combined = redux_1.combineReducers(merged);\r\n    store.replaceReducer(combined);\r\n}\r\nfunction injectAsyncReducers(asyncReducers) {\r\n    const injectReducers = Object.keys(asyncReducers).reduce((all, item) => {\r\n        if (store.asyncReducers[item]) {\r\n            delete all[item];\r\n        }\r\n        return all;\r\n    }, asyncReducers);\r\n    store.asyncReducers = Object.assign({}, store.asyncReducers, injectReducers);\r\n    replaceReducers(rootReducer_ts_1.default);\r\n}\r\nexports.injectAsyncReducers = injectAsyncReducers;\r\nif (module.hot) {\r\n    module.hot.accept('../reducers/rootReducer', () => {\r\n        const nextReducer = require('../reducers/rootReducer').default;\r\n        replaceReducers(nextReducer);\r\n    });\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./store/index.ts\n// module id = 288\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = {\r\n    nothing: () => ({}),\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./reducers/rootReducer.ts\n// module id = 289\n// module chunks = 0"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACNA;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}